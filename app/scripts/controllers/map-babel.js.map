{"version":3,"sources":["app/scripts/controllers/map.js"],"names":[],"mappings":"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","file":"app/scripts/controllers/map.js","sourcesContent":["angular.module('EcmaScript6').controller('map-babel', ['$scope', 'AppLogger', function($scope, AppLogger) {\n\tvar object1 = {\n\t\tname : 'Slaven'\n\t},\n\tobject2 = {\n\t\tsurname : 'Tomac'\n\t},\n\tobject3 = {\n\t\tsurname : 'Tomac'\n\t},\n\tmyMap = new Map([\n\t\t\t\t\t\t[object1,'ObjectWithNameOnly'],\n\t\t\t\t\t\t['myKey1',object1],\n\t\t\t\t\t\t[object2,object1]\n\t\t\t\t\t]);\n\n\tAppLogger.info('--- get ---');\n\n\tAppLogger.info(myMap.get(object1));\n\tAppLogger.info(myMap.get('myKey1'));\n\tAppLogger.info(myMap.get(object3));\n\tAppLogger.info(myMap.get(myMap.get('myKey1')));\n\n\tAppLogger.info('--- delete ---');\n\n\tAppLogger.info(myMap.get(object1));\n\tmyMap.delete(object1);\n\tAppLogger.info(myMap.get(object1));\n\n\tAppLogger.info('--- entries ---');\n\n\tvar iterator = myMap.entries();\n\tAppLogger.info(iterator.next());\n\tAppLogger.info(iterator.next());\n\tAppLogger.info(iterator.next());\n\n\tAppLogger.info('--- forEach ---');\n\n\tmyMap.forEach(function(val) {\n\t\tAppLogger.info(val);\n\t});\n\n\tAppLogger.info('--- set/has ---');\n\n\tAppLogger.info(myMap.has(object3));\n\tmyMap.set(object3, 'setObject');\n\tAppLogger.info(myMap.has(object3));\n\n\tAppLogger.info('--- keys ---');\n\n\tvar keysIterator = myMap.keys();\n\tAppLogger.info(keysIterator.next());\n\tAppLogger.info(keysIterator.next());\n\tAppLogger.info(keysIterator.next());\n\n\tAppLogger.info('--- values ---');\n\n\tvar valuesIterator = myMap.values();\n\tAppLogger.info(valuesIterator.next());\n\tAppLogger.info(valuesIterator.next());\n\tAppLogger.info(valuesIterator.next());\n\n\tAppLogger.info('--- for..of ---');\n\n\tfor (var [key, val] of myMap) {\n\t\tAppLogger.info('key');\n\t\tAppLogger.info(key);\n\t\tAppLogger.info('val');\n\t\tAppLogger.info(val);\n\t}\n\n}]);"]}